--- src/Terraria\Terraria.GameContent.UI.Elements\UICharacterListItem.cs
+++ src/tModLoader\Terraria.GameContent.UI.Elements\UICharacterListItem.cs
@@ -6,6 +_,9 @@
 using Terraria.Localization;
 using Terraria.Social;
 using Terraria.UI;
+using System.Reflection;
+using Terraria.ModLoader;
+using System.Linq;
 
 namespace Terraria.GameContent.UI.Elements
 {
@@ -23,6 +_,8 @@
 		private Texture2D _buttonFavoriteInactiveTexture;
 		private Texture2D _buttonPlayTexture;
 		private Texture2D _buttonDeleteTexture;
+		private Texture2D _errorTexture;
+		private Texture2D _configTexture;
 		private UIImageButton _deleteButton;
 
 		public bool IsFavorite
@@ -44,6 +_,10 @@
 			this._buttonFavoriteInactiveTexture = TextureManager.Load("Images/UI/ButtonFavoriteInactive");
 			this._buttonPlayTexture = TextureManager.Load("Images/UI/ButtonPlay");
 			this._buttonDeleteTexture = TextureManager.Load("Images/UI/ButtonDelete");
+			this._errorTexture = Texture2D.FromStream(Main.instance.GraphicsDevice,
+				Assembly.GetExecutingAssembly().GetManifestResourceStream("Terraria.ModLoader.UI.ButtonError.png"));
+			this._configTexture = Texture2D.FromStream(Main.instance.GraphicsDevice,
+				Assembly.GetExecutingAssembly().GetManifestResourceStream("Terraria.ModLoader.Config.UI.ButtonConfig.png"));
 			this.Height.Set(96f, 0f);
 			this.Width.Set(0f, 1f);
 			base.SetPadding(6f);
@@ -90,15 +_,84 @@
 			{
 				base.Append(uIImageButton4);
 			}
+			if (data.customDataFail != null)
+			{
+				UIImageButton uIImageButton5 = new UIImageButton(this._errorTexture);
+				uIImageButton5.VAlign = 1f;
+				uIImageButton5.HAlign = 1f;
+				uIImageButton5.Left.Set(-24f, 0f);
+				uIImageButton5.OnClick += new UIElement.MouseEvent(this.ErrorButtonClick);
+				uIImageButton5.OnMouseOver += new UIElement.MouseEvent(this.ErrorMouseOver);
+				uIImageButton5.OnMouseOut += new UIElement.MouseEvent(this.DeleteMouseOut);
+				base.Append(uIImageButton5);
+			}
+			if (data.Player.usedMods != null)
+			{
+				var currentModNames = ModLoader.ModLoader.Mods.Select(m => m.Name).ToArray();
+				var missingMods = data.Player.usedMods.Except(currentModNames).ToList();
+				var newMods = currentModNames.Except(new[] { "ModLoader" }).Except(data.Player.usedMods).ToList();
+				if (missingMods.Count > 0 || newMods.Count > 0)
+				{
+					UIText warningLabel = new UIText("", 1f, false)
+					{
+						VAlign = 0f,
+						HAlign = 1f
+					};
+					warningLabel.Left.Set(-30f, 0f);
+					warningLabel.Top.Set(3f, 0f);
+					Append(warningLabel);
+
+					UIImageButton modListWarning = new UIImageButton(this._errorTexture)
+					{
+						VAlign = 0f,
+						HAlign = 1f
+					};
+					modListWarning.Top.Set(-2f, 0f);
+					System.Text.StringBuilder fullSB = new System.Text.StringBuilder(Language.GetTextValue("tModLoader.ModsDifferentSinceLastPlay"));
+					System.Text.StringBuilder shortSB = new System.Text.StringBuilder();
+					if (missingMods.Count > 0)
+					{
+						shortSB.Append((missingMods.Count > 1 ? Language.GetTextValue("tModLoader.MissingXMods", missingMods.Count) : Language.GetTextValue("tModLoader.Missing1Mod")));
+						fullSB.Append("\n" + Language.GetTextValue("tModLoader.MissingModsListing", string.Join("\n", missingMods.Select(x => "- " + x))));
+					}
+					if (newMods.Count > 0)
+					{
+						shortSB.Append(" " + (newMods.Count > 1 ? Language.GetTextValue("tModLoader.NewXMods", newMods.Count) : Language.GetTextValue("tModLoader.New1Mod")));
+						fullSB.Append("\n" + Language.GetTextValue("tModLoader.NewModsListing", string.Join("\n", newMods.Select(x => "- " + x))));
+					}
+					string warning = shortSB.ToString();
+					string fullWarning = fullSB.ToString();
+					modListWarning.OnMouseOver += (a, b) => warningLabel.SetText(warning);
+					modListWarning.OnMouseOut += (a, b) => warningLabel.SetText("");
+					modListWarning.OnClick += (a, b) =>
+					{
+						Interface.infoMessage.Show(fullWarning, 888, Main._characterSelectMenu);
+					};
+					Append(modListWarning);
+				}
+			}
+			int buttonLabelLeft = 80;
+			//if(ConfigManager.Configs.Count > 0)
+			//{
+			//	UIImageButton configButton = new UIImageButton(this._configTexture);
+			//	configButton.VAlign = 1f;
+			//	configButton.Left.Set(76, 0f);
+			//	configButton.OnClick += new UIElement.MouseEvent(this.ConfigButtonClick);
+			//	configButton.OnMouseOver += new UIElement.MouseEvent(this.ConfigMouseOver);
+			//	configButton.OnMouseOut += new UIElement.MouseEvent(this.ButtonMouseOut);
+			//	base.Append(configButton);
+
+			//	buttonLabelLeft += 24;
+			//}
 			this._buttonLabel = new UIText("", 1f, false);
 			this._buttonLabel.VAlign = 1f;
-			this._buttonLabel.Left.Set(80f, 0f);
+			this._buttonLabel.Left.Set(buttonLabelLeft, 0f);
 			this._buttonLabel.Top.Set(-3f, 0f);
 			base.Append(this._buttonLabel);
 			this._deleteButtonLabel = new UIText("", 1f, false);
 			this._deleteButtonLabel.VAlign = 1f;
 			this._deleteButtonLabel.HAlign = 1f;
-			this._deleteButtonLabel.Left.Set(-30f, 0f);
+			this._deleteButtonLabel.Left.Set(data.customDataFail == null ? -30f : -54f, 0f);
 			this._deleteButtonLabel.Top.Set(-3f, 0f);
 			base.Append(this._deleteButtonLabel);
 			uIImageButton.SetSnapPoint("Play", snapPointIndex, null, null);
@@ -134,6 +_,16 @@
 		private void DeleteMouseOver(UIMouseEvent evt, UIElement listeningElement)
 		{
 			this._deleteButtonLabel.SetText(Language.GetTextValue("UI.Delete"));
+		}
+
+		private void ErrorMouseOver(UIMouseEvent evt, UIElement listeningElement)
+		{
+			this._deleteButtonLabel.SetText(this._data.customDataFail.modName + " Error");
+		}
+
+		private void ConfigMouseOver(UIMouseEvent evt, UIElement listeningElement)
+		{
+			this._buttonLabel.SetText("Edit Player Config");
 		}
 
 		private void DeleteMouseOut(UIMouseEvent evt, UIElement listeningElement)
@@ -211,6 +_,15 @@
 			{
 				uIList.UpdateOrder();
 			}
+		}
+
+		private void ErrorButtonClick(UIMouseEvent evt, UIElement listeningElement)
+		{
+			Logging.Terraria.Error(Language.GetTextValue("tModLoader.PlayerCustomDataFail"), this._data.customDataFail.InnerException);
+		}
+
+		private void ConfigButtonClick(UIMouseEvent evt, UIElement listeningElement)
+		{
 		}
 
 		public override int CompareTo(object obj)
@@ -270,11 +_,11 @@
 			this.DrawPanel(spriteBatch, vector2, num2);
 			spriteBatch.Draw(Main.heartTexture, vector2 + new Vector2(5f, 2f), Color.White);
 			vector2.X += 10f + (float)Main.heartTexture.Width;
-			Utils.DrawBorderString(spriteBatch, this._data.Player.statLifeMax + " HP", vector2 + new Vector2(0f, 3f), Color.White, 1f, 0f, 0f, -1);
+			Utils.DrawBorderString(spriteBatch, this._data.Player.statLifeMax2 + " HP", vector2 + new Vector2(0f, 3f), Color.White, 1f, 0f, 0f, -1);
 			vector2.X += 65f;
 			spriteBatch.Draw(Main.manaTexture, vector2 + new Vector2(5f, 2f), Color.White);
 			vector2.X += 10f + (float)Main.manaTexture.Width;
-			Utils.DrawBorderString(spriteBatch, this._data.Player.statManaMax + " MP", vector2 + new Vector2(0f, 3f), Color.White, 1f, 0f, 0f, -1);
+			Utils.DrawBorderString(spriteBatch, this._data.Player.statManaMax2 + " MP", vector2 + new Vector2(0f, 3f), Color.White, 1f, 0f, 0f, -1);
 			vector.X += num2 + 5f;
 			Vector2 vector3 = vector;
 			float num3 = 140f;

